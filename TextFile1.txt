 @if (false)
        {
            <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">
                <div class="mb-3">
                    <h4>MuxedStream</h4>
                </div>

                @foreach (var ver in Model.YouTubeDownloaderLinks_.objMuxedStreamInfos)
                {
                    <div class="accordion" id="@(count__)">
                        <div class="blured bordeer-tlbr rounded-3 mb-3">
                            <h2 class="accordion-header">
                                <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                        style="background-color:transparent" type="button"
                                        data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                        aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                    Video @ver.VideoResolution
                                </button>
                            </h2>
                            <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                                <div class="accordion-body">
                                    <ul class="nav flex-column">
                                        @{

                                            await Text("VideoCodec: " + ver.VideoCodec);
                                            await Text("VideoQuality: " + ver.VideoQuality);
                                            await Text("VideoResolution: " + ver.VideoResolution);
                                            await Text("Size: " + ver.Size);
                                            await Text("Framerate: " + ver.Framerate);

                                            count__++;
                                        }
                                    </ul>
                                    <div class="mt-3 m-2">
                                        <div class="bordeer-tlbr rounded-3 m-1">
                                            <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">

                <div class="mb-3">
                    <h4>AudioStream</h4>
                </div>
                @foreach (var ver in Model.YouTubeDownloaderLinks_.objAudioStreamInfos)
                {
                    <div class="accordion" id="@(count__)">
                        <div class="blured bordeer-tlbr rounded-3 mb-3">
                            <h2 class="accordion-header">
                                <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                        style="background-color:transparent" type="button"
                                        data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                        aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                    Audio | AudioCodec: @ver.AudioCodec
                                </button>
                            </h2>
                            <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                                <div class="accordion-body">
                                    <ul class="nav flex-column">
                                        @{
                                            await Text("Size: " + ver.Size);
                                            await Text("Bitrate: " + ver.Bitrate);
                                            await Text("AudioCodec: " + ver.AudioCodec);
                                            count__++;
                                        }
                                    </ul>
                                    <div class="mt-3 m-2">
                                        <div class="bordeer-tlbr rounded-3 m-1">
                                            <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>




            <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">

                <div class="mb-3">
                    <h4>VideoStream</h4>
                </div>

                @foreach (var ver in Model.YouTubeDownloaderLinks_.objVideoStreamInfos)
                {

                    <div class="accordion" id="@(count__)">

                        <div class="blured bordeer-tlbr rounded-3 mb-3">
                            <h2 class="accordion-header">
                                <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                        style="background-color:transparent" type="button"
                                        data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                        aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                    Video @ver.VideoResolution
                                </button>
                            </h2>
                            <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                                <div class="accordion-body">
                                    <ul class="nav flex-column">
                                        @{

                                            await Text("VideoCodec: " + ver.VideoCodec);
                                            await Text("VideoQuality: " + ver.VideoQuality);
                                            await Text("VideoResolution: " + ver.VideoResolution);
                                            await Text("Size: " + ver.Size);
                                            await Text("Framerate: " + ver.Framerate);

                                            count__++;
                                        }
                                    </ul>
                                    <div class="mt-3 m-2">
                                        <div class="bordeer-tlbr rounded-3 m-1">
                                            <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>
        }