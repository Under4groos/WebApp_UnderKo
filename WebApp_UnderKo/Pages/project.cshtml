@page
@using WebApp_UnderKo.Models.XamlProjectObject.Project
@model WebApp_UnderKo.Pages.projectModel
@{

    async Task a_Button(string LinkDownload, string text)
    {
        <a href="@LinkDownload" style="width:100%" class="btn fs-6 bordeer-tlbr btn-dark  btn-lg  m-1"> @text </a>
    }
    async Task button_Button(string LinkDownload, string text)
    {
        <button onclick="@(LinkDownload)" style="width:100%" class="btn fs-6 bordeer-tlbr btn-dark  btn-lg  m-1"> @text </button>
    }
    async Task BackImage(string url, double opacity = 0.5, int blur = 10)
    {
        // http://localhost:7076/file?name=smdcompile/smdcompile_1.png
        int mar = -5;
        <div style="position: absolute; left: @(mar)px; right: @(mar)px; top: @(mar)px; bottom: @(mar)px;
                                                  background-image: url('/file?name=@url'); opacity: @(opacity.ToString().Replace("," , ".")); filter:blur(@(blur)px); z-index:-10"></div>
    }

    


}

<div class="container mt-2 pb-2">
    @if (string.IsNullOrEmpty(Model.NameProject))
    {


        @foreach (var project in WebApp_UnderKo.Models.G_.CacheData.xamlProjectsData.Projects)
        {
            <div class="bg-image position-relative bordeer-tlbr rounded-3 overflow-hidden  text-center bg-body-tertiary mb-3">
                @{
                    await BackImage(project.Images.FirstOrDefault<string>(string.Empty) );
                }


                <div style="z-index:10" class="col-md-8 p-lg-1 mx-auto my-1 mt-3 mb-3">
                    <h1 class="display-5 fw-bold">@project.Name</h1>
                    <h5 class="fw-normal text-muted mb-3">@project.Description </h5>
                    <div class="d-flex gap-3 justify-content-center lead fw-normal">
                        @{
                            // await a_Button($"/project?name={project.Name}", "Learn more");
                            await a_Button($"/project?name={project.Name}", "Learn more");


                        }

                    </div>
                </div>

            </div>
        }



    }
    else
    {
        
        @if (Model.project.Images.Count > 0)
           await BackImage(Model.project.Images[0]);
        <div class="px-4 mt-5 text-center">

            <h1 class="display-5 fw-bold text-body-emphasis">@Model.project.Name</h1>
            <div class="col-lg-6 mx-auto">
                <p class="lead mb-4">
                    @Model.project.Description
                </p>
                <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
                    @foreach (Button item in Model.project.ButtonsTop)
                    {

                        await button_Button(item.Command, item.Text);
                    }
                </div>
            </div>
            @if (Model.project.Downloads > 0)
            {
                <div class="row justify-content-center mt-3">
                    <p class="col-lg-8 mx-auto fs-5 text-white-50">
                        Downloads: <strong class="text-uppercase"> @Model.project.Downloads </strong>
                    </p>
                </div>
            }
            
        </div>


    }
</div>