@page
@model WebApp_UnderKo.Pages.YouTubeDownloaderModel
@{
    ViewData["Title"] = "YouTubeDownloader";
    int count__ = 0;


    async Task Text(string item)
    {
        <div class="bordeer-tlbr rounded-3 m-1">
            <li class="nav-item m-1"><a href="#" class="nav-link p-0 text-muted">VideoCodec: @item</a></li>
        </div>

    }
}


<div class="m-3">
    <div width="100%" class="pb-3 blured p-3 bordeer-tlbr rounded-3">
        <form method="post">
            <h4>Link YouTube</h4>
            <input class="form-control rounded text-muted bordeer-tlbr"
                   style="background-color: #1f1f1f33;"
                   type="text" name="url" value="@Model.Link" />
        </form>
    </div>
    @if (Model.YouTubeDownloaderLinks_.objAudioStreamInfos.Count > 0)
    {
        <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">


            @foreach (var ver in Model.YouTubeDownloaderLinks_.objMuxedStreamInfos)
            {

                <div class="accordion" id="@(count__)">

                    <div class="blured bordeer-tlbr rounded-3 mb-3">
                        <h2 class="accordion-header">
                            <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                    style="background-color:transparent" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                    aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                Video @ver.VideoResolution
                            </button>
                        </h2>
                        <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                            <div class="accordion-body">
                                <ul class="nav flex-column">
                                    @{

                                        await Text("VideoCodec: " + ver.VideoCodec);
                                        await Text("VideoQuality: " + ver.VideoQuality);
                                        await Text("VideoResolution: " + ver.VideoResolution);
                                        await Text("Size: " + ver.Size);
                                        await Text("Framerate: " + ver.Framerate);

                                        count__++;
                                    }
                                </ul>
                                <div class="mt-3 m-2">
                                    <div class="bordeer-tlbr rounded-3 m-1">
                                        <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>


        <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">


            @foreach (var ver in Model.YouTubeDownloaderLinks_.objAudioStreamInfos)
            {

                <div class="accordion" id="@(count__)">

                    <div class="blured bordeer-tlbr rounded-3 mb-3">
                        <h2 class="accordion-header">
                            <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                    style="background-color:transparent" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                    aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                Audio | AudioCodec: @ver.AudioCodec
                            </button>
                        </h2>
                        <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                            <div class="accordion-body">
                                <ul class="nav flex-column">
                                    @{


                                        await Text("Size: " + ver.Size);
                                        await Text("Bitrate: " + ver.Bitrate);
                                        await Text("AudioCodec: " + ver.AudioCodec);

                                        count__++;
                                    }
                                </ul>
                                <div class="mt-3 m-2">
                                    <div class="bordeer-tlbr rounded-3 m-1">
                                        <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>




        <div class="mt-2 blured p-3 bordeer-tlbr rounded-3">


            @foreach (var ver in Model.YouTubeDownloaderLinks_.objVideoStreamInfos)
            {

                <div class="accordion" id="@(count__)">

                    <div class="blured bordeer-tlbr rounded-3 mb-3">
                        <h2 class="accordion-header">
                            <button class="accordion-button bordeer-tlbr-bottom text-muted"
                                    style="background-color:transparent" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#___asdcollapseOne@(count__)"
                                    aria-expanded="fl" aria-controls="___asdcollapseOne@(count__)">
                                Video @ver.VideoResolution
                            </button>
                        </h2>
                        <div id="___asdcollapseOne@(count__)" class="accordion-collapse collapse" data-bs-parent="#___asd">
                            <div class="accordion-body">
                                <ul class="nav flex-column">
                                    @{

                                        await Text("VideoCodec: " + ver.VideoCodec);
                                        await Text("VideoQuality: " + ver.VideoQuality);
                                        await Text("VideoResolution: " + ver.VideoResolution);
                                        await Text("Size: " + ver.Size);
                                        await Text("Framerate: " + ver.Framerate);

                                        count__++;
                                    }
                                </ul>
                                <div class="mt-3 m-2">
                                    <div class="bordeer-tlbr rounded-3 m-1">
                                        <a class="nav-link text-muted" target="_blank" href="@ver.Url">Download</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    }

</div>